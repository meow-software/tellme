import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ThemeProvider } from "@/components/theme/theme-provider"
import ClientLayoutI18n from "@/components/providers/clientLayoutI18n";
import { cookies } from "next/headers";
import { DEFAULT_LANGUAGE } from "@tellme/core";
import { loadNamespaceServer } from "@/lib/i18n";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};


export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  let locale = (await cookies()).get('lang')?.value;
  if (!locale) locale = DEFAULT_LANGUAGE;
  // const initialMessages = await loadNamespaceServer(locale, 'home');
  const timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone || 'UTC';

  return (
    <html lang={locale} suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ClientLayoutI18n locale={locale} timeZone={timeZone} >
          <ThemeProvider
            attribute="class"
            defaultTheme="system"
            enableSystem
            disableTransitionOnChange
          >
            {children}
          </ThemeProvider>
        </ClientLayoutI18n>
      </body>
    </html>
  );
}